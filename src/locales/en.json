{
    "Let's get started! Fill out the form.": "Bienvenue Ã  React et react-i18next",
    "shareButton": "Share",
    "exportButton": "Export to .json",
    "getStarted": "Let's get started! Fill out the form.",
    "fileUploadError": "Please upload a valid csv file.",
    "removeButton": "Remove",
    "dropzoneLabel": "Drag and drop your csv file here, or click to select a file",
    "datasetPreview": "Dataset preview showing the first 5 rows.",
    "error": "Sorry, something went wrong.",
    "loadingMessage": "Setting up environment...",
    "mostBiasedCluster": "Most biased\n cluster",
    "cluster": "Cluster {{value}}",
    "exportToPDF": "Export to pdf",
    "exportToJSON": "Export synthetic data to json",
    "downloadButton": "Download",
    "biasSettings": {
        "exportToPDF": "Download bias detection report as pdf",
        "exportToJSON": "Export clusters as json",
        "form": {
            "fieldsets": {
                "data": {
                    "title": "Data",
                    "dataSet": "Dataset",
                    "performanceMetric": "Performance metric column"
                },
                "parameters": {
                    "title": "Parameters",
                    "iterations": "Iterations",
                    "minClusterSize": "Minimal cluster size",
                    "performanceInterpretation": {
                        "title": "Performance metric interpretation",
                        "lower": "Lower value of performance metric is better, e.g., error rate",
                        "higher": "Higher value of performance metric is better, e.g., accuracy"
                    }
                }
            },
            "errors": {
                "csvRequired": "Please upload a csv file.",
                "targetColumnRequired": "Please select a target column.",
                "dataTypeRequired": "Please select a data type.",
                "noNumericColumns": "No numeric columns found. Please upload a valid dataset.",
                "analysisError": "Error while analysing",
                "noData": "No data loaded"
            },
            "actions": {
                "tryItOut": "Try it out",
                "runAnalysis": "Run Analysis",
                "analyzing": "Analyzing...",
                "initializing": "Initialising...",
                "selectColumn": "Select a column"
            }
        },
        "demoCard": {
            "title": "Try it out!",
            "description": "Alternatively, use our demo dataset."
        }
    },
    "syntheticData": {
        "demo": {
            "heading": "Information about demo dataset",
            "description": "A subset of the [Law School Admission Bar](https://www.kaggle.com/datasets/danofer/law-school-admissions-bar-passage)* dataset is used as a demo. Synthetic data will be generated for the following columns:\n  \n&nbsp;&nbsp;\n- sex: student gender, i.e. 1 (male), 2 (female);\n- race1: race of student, i.e., asian, black, hispanic, white, other;\n- ugpa: undergraduate GPA of student (average course grades), continous variable;\n- bar: Ground truth label indicating whether or not the student passed the bar, i.e., passed 1st time, passed 2nd time, failed, non-graduated.\n  \n&nbsp;&nbsp;\n\nThe CART method is used to generate the synthetic data. CART generally produces higher quality synthetic datasets, but might not work well on datasets with categorical variables with 20+ categories. Use Gaussian Copula in those cases.\n  \n&nbsp;&nbsp;\n\n*The original paper can be found [here](https://files.eric.ed.gov/fulltext/ED469370.pdf)\n \n&nbsp;&nbsp;\n"
        },
        "exportToPDF": "Download evaluation report as pdf",
        "exportToJSON": "Download synthetic data as json",
        "exportToCSV": "Download synthetic data as csv",
        "form": {
            "errors": {
                "csvRequired": "Please upload a csv file.",
                "analysisError": "Error while analysing",
                "columnsCountError": "File may contain a maximum of 8 columns."
            },
            "fieldset": {
                "sourceDataset": "Source dataset",
                "sdgMethod": {
                    "title": "Method",
                    "cart": "CART",
                    "gc": "Gaussian Copula",
                    "tooltip": "The CART method is used to generate the synthetic data.\n  \n  \n  \nCART generally produces higher quality synthetic datasets, but might not work well on datasets with categorical variables with 20+ categories.\n  \n  \n  \nsUse Gaussian Copula in those cases"
                },
                "samples": "Number of samples"
            },
            "actions": {
                "tryItOut": "Try it out",
                "runGeneration": "Run synthetic data generation",
                "analyzing": "Analyzing...",
                "initializing": "Initialising..."
            }
        },
        "demoCard": {
            "title": "Try it out!",
            "description": "Do you not have a dataset at hand? No worries use our demo dataset."
        },
        "columnsInDatasetInfo": "If the detected data types are incorrect, please change this locally in the source dataset before attaching it to the app.",
        "univariateCharts": "Univariate distributions",
        "bivariateDistributionRealData": "Bivariate distribution",
        "univariateDistributionSyntheticData": "Univariate distribution",
        "bivariateDistributionSyntheticData": "Bivariate distribution",
        "correlationRealdata": "Correlation matrix",
        "correlationSyntheticData": "Correlation matrix",
        "dataSetPreview": {
            "heading": "0. Preview of real data"
        },
        "columnsInDataset": "1. Data types detection",
        "_explanatoryDataAnalysisTitle": "2. Explanatory data analysis",
        "cartModelTitle": "2. Method: CART model",
        "gaussianCopulaModelTitle": "2. Method: Gaussian Copula model",
        "cartModelDescription": "The CART (Classification and Regression Trees) method generates synthetic data by learning patterns from real data through a decision tree that splits data into homogeneous groups based on feature values. It predicts averages for numerical data and assigns the most common category for categorical data, using these predictions to create new synthetic points.",
        "evaluationOfGeneratedDataTitle": "3. Evaluation of generated data",
        "outputDataTitle": "4. Generated synthetic data",
        "diagnosticsTitle": "Diagnostic Results",
        "correlationDifference": "Correlation difference: {{correlationDifference}}",
        "univariateText": "{{samples}} synthetic data points are generated using CART. The figures below display the differences in value frequency for each variable. The synthetic data is of high quality when all bars are of equal height.",
        "bivariateText": "The figures below display the differences in value frequency for a combination of variables. For comparing two categorical variables, bar charts are plotted. For comparing a numerical and a categorical variables, a so called [violin plot](https://en.wikipedia.org/wiki/Violin_plot) is shown. For comparing two numercial variables, a [LOESS plot](https://en.wikipedia.org/wiki/Local_regression) is created. For all plots holds: the synthetic data is of high quality when the shape of the distributions in the synthetic data equal the distributions in the real data."
    },

    "biasAnalysis": {
        "demo": {
            "heading": "Information about demo dataset",
            "description": "As a demo, the [Twitter15](https://www.dropbox.com/scl/fi/flgahafqckxtup2s9eez8/rumdetect2017.zip?dl=0&e=1&file_subpath=%2Frumor_detection_acl2017%2Ftwitter15&rlkey=b7v86v3q1dpvcutxqk0xi7oej) dataset is loaded below. The dataset contains features of tweets and the prediction of a BERT-based misinformation classifier whether the tweet is fake news or not. False positive classifications are marked as FP. The FP column indicates that a tweet is falsy accused by the misinformation detection algorithm to be fake news. The FP metric will be used as a performance metric to measure bias is this use case.\n  \n&nbsp;&nbsp;\n\n In this example, we will examine what type of tweets are more/less often classified by misinformation detection algorithm as fake news."
        },
        "parameters": {
            "heading": "Parameters selected for clustering",
            "iterations": "Number of iterations: {{value}}",
            "minClusterSize": "Minimal cluster size: {{value}}",
            "performanceMetric": "Performance metric column: {{value}}",
            "dataType": "Data type: {{value}}"
        },
        "clusters": {
            "summary": "We found {{clusterCount}} clusters. Cluster with most bias consists of {{biasedCount}} datapoints. The uploaded dataset consists of {{totalCount}} datapoints.",
            "sizeHint": "By adapting the \"Minimal cluster size\" parameter, the number of clusters can be controlled."
        },
        "biasedCluster": {
            "heading": "In the most biased cluster datapoints have:",
            "accordionTitle": "Open details to view feature comparisons to the rest of the dataset",
            "comparison": {
                "less": "{{value}} less {{feature}} than in the rest of the dataset.",
                "more": "{{value}} more {{feature}} than in the rest of the dataset.",
                "equal": "equal {{feature}} as in the rest of the dataset."
            }
        },
        "distribution": {
            "heading": "The \"{{variable}}\" variable distribution across the different clusters:"
        }
    },
    "heatmap": {
        "realdata": "Correlation matrix of attached data",
        "syntheticdata": "Absolute difference in correlation matrix, i.e., |attached data - synthetic data|"
    },
    "distribution": {
        "distributionFor": "Distribution for",
        "countFor": "Distribution for",
        "frequency": "Frequency",
        "syntheticData": "Synthetic data",
        "realData": "Real data",
        "percentage": "Percentage of dataset",
        "by": "by",
        "distributionOf": "Distribution of"
    }
}
