diff --git a/node_modules/react-py/dist/workers/python-worker.js b/node_modules/react-py/dist/workers/python-worker.js
index db96858..4db2eed 100644
--- a/node_modules/react-py/dist/workers/python-worker.js
+++ b/node_modules/react-py/dist/workers/python-worker.js
@@ -8,8 +8,8 @@ var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, ge
     });
 };
 var __generator = (this && this.__generator) || function (thisArg, body) {
-    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
-    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
+    var _ = { label: 0, sent: function () { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
+    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
     function verb(n) { return function (v) { return step([n, v]); }; }
     function step(op) {
         if (f) throw new TypeError("Generator is already executing.");
@@ -34,7 +34,7 @@ var __generator = (this && this.__generator) || function (thisArg, body) {
         if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
     }
 };
-importScripts('https://cdn.jsdelivr.net/pyodide/v0.23.4/full/pyodide.js');
+importScripts('https://cdn.jsdelivr.net/pyodide/v0.26.1/full/pyodide.js');
 // Monkey patch console.log to prevent the script from outputting logs
 if (self.location.hostname !== 'localhost') {
     // eslint-disable-next-line @typescript-eslint/no-empty-function
@@ -61,8 +61,8 @@ var python = {
                     case 0:
                         _a = self;
                         return [4 /*yield*/, self.loadPyodide({
-                                stdout: stdout
-                            })];
+                            stdout: stdout
+                        })];
                     case 1:
                         _a.pyodide = _b.sent();
                         return [4 /*yield*/, self.pyodide.loadPackage(['pyodide-http'])];
